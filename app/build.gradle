/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco-report-aggregation'
}

// Reste du fichier de configuration
tasks.register('aggregatePmdReports', AggregatePmdReportsTask) {
    projectsFiles = files(
            '../domains/build/reports/pmd/main.xml',
            '../presentations/build/reports/pmd/main.xml',
            '../infrastructures/build/reports/pmd/main.xml',
            '../views/build/reports/pmd/main.xml'
)
reportFile = file('build/reports/pmd/agregatedPmdViolations.html')
dependsOn(':domains:build',':presentations:build',':infrastructures:build',':views:build')
}
check {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
    dependsOn tasks.named('aggregatePmdReports', AggregatePmdReportsTask)
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation project(':domains')
    implementation project(':presentations')
    implementation project(':infrastructures')
    implementation project(':views')
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.apache.derby:derby:10.16.1.1'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.3')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'stas.thermometer.app.App'
    applicationDefaultJvmArgs = [
            '-DFile.encoding=UTF-8',
            '-Dsun.stdout.encoding=UTF-8',
            '-Dlog4j.configurationFile=configs/log4j/log4j2.xml']
}
run {
    standardInput = System.in
}
